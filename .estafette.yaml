builder:
  track: dev

labels:
  app-group: estafette-controllers
  type: service
  team: estafette-team
  language: golang

version:
  semver:
    major: 1
    minor: 2
    patch: 11
    labelTemplate: '{{branch}}-{{auto}}'
    releaseBranch: 1.2.11

stages:
  build-lint-and-package:
    parallelStages:
      build:
        image: golang:1.19-alpine
        env:
          CGO_ENABLED: 0
          GOOS: linux
        commands:
        - go test ./...
        - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

      lint-helm-chart:
        image: extensions/helm:dev
        action: lint

      package-helm-chart:
        image: extensions/helm:dev
        action: package

  bake:
    image: extensions/docker:dev
    action: build
    repositories:
    - estafette
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  check-container:
    parallelStages:
      check-efficiency:
        image: extensions/docker:dev
        action: dive
        repositories:
        - estafette

      vulnerability-scan:
        image: extensions/docker:dev
        action: trivy
        repositories:
        - estafette

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    repositories:
    - estafette

  test-helm-chart:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.21
      readiness:
        path: /kubernetes-ready
        port: 10080
    image: extensions/helm:dev
    action: test
    values: |-
      secret:
        letsencryptAccountJson: {}
        letsencryptAccountKey: abc
        cloudflareApiEmail: bot@estafette.io
        cloudflareApiKey: abc
      imagePullSecret:
        registryURL: https://index.docker.io/v1/
        username: estafette.secret(mq1KU2jeuFuTqa9E.FiNuYsBoSjSL5ofbvIrVv5a0CV-GrLXzYw==.Gzl7ZsNvFjOFktJDk9az9kONKHh_6CIK2VTOyadFH6gcX4ERuM9nzgBM34_N1LFfZx3mvgmXJ4Ox049sXCahlogPgwLh7Q==)
        password: estafette.secret(HGpEr9kKQhtSCIuP.5XlbxAU58eDuttETHvdFg0SihZ4xAXdxK3cJLHobiTF5j8L_1xurNwpo4I3tvA==.7n5g-iE9lOWxt8g7OvEVhhCzkp1WAVRGBngUMGpPg06by3yXTe1-D0K3Cbq72ERcExsPefAT5HtlWIdugf4C-qyy8ddQJg==)

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: main

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish
    repoBranch: main

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  release:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: main

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge
        repoBranch: main

      create-github-release:
        image: extensions/github-release:dev
