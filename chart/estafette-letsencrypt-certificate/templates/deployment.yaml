apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.Chart.Name | quote}}
  namespace: {{.Release.Namespace | quote}}
  labels:
{{ include "commonLabels" . | indent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.Chart.Name | quote}}
  template:
    metadata:
      labels:
{{ include "completeLabels" . | indent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9101"
    spec:
      serviceAccount: {{.Chart.Name | quote}}
      terminationGracePeriodSeconds: 120
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      containers:
      - name: {{.Chart.Name | quote}}
        image: estafette/estafette-letsencrypt-certificate:{{.Chart.AppVersion}}
        imagePullPolicy: Always
        env:
        - name: "CF_API_EMAIL"
          value: {{.Values.secret.cloudflare.email | quote}}
        - name: "CF_API_KEY"
          value: {{.Values.secret.cloudflare.key | quote}}
        resources:
          requests:
            cpu: {{.Values.resources.requests.cpu | quote}}
            memory: {{.Values.resources.requests.memory | quote}}
          limits:
            cpu: {{.Values.resources.limits.cpu | quote}}
            memory: {{.Values.resources.limits.memory | quote}}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9101
          initialDelaySeconds: 30
          timeoutSeconds: 1
        volumeMounts:
        - name: letsencrypt-account
          mountPath: /account
      volumes:
      - name: letsencrypt-account
        secret:
          secretName: {{.Chart.Name}}-account
